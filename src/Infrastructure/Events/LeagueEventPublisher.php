<?php

/**
 * This file is part of slick/cqrs-tools
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Slick\CQRSTools\Infrastructure\Events;

use League\Event\EmitterInterface;
use Slick\CQRSTools\Event;
use Slick\CQRSTools\Event\EventGenerator;
use Slick\CQRSTools\Event\EventListener;
use Slick\CQRSTools\Event\EventPublisher;

/**
 * LeagueEventPublisher
 *
 * @package Slick\CQRSTools\Infrastructure\Events
*/
final class LeagueEventPublisher implements EventPublisher
{
    /**
     * @var EmitterInterface
     */
    private $emitter;

    /**
     * Creates a  League Event Publisher
     *
     * @param EmitterInterface $emitter
     */
    public function __construct(EmitterInterface $emitter)
    {
        $this->emitter = $emitter;
    }

    /**
     * Publishes all event generated by provided generator
     *
     * @param EventGenerator $generator
     */
    public function publishEventsFrom(EventGenerator $generator): void
    {
        $events = $generator->releaseEvents();
        $this->emitter->emitBatch($events);
    }

    /**
     * Publishes a single event
     *
     * @param Event $event
     */
    public function publish(Event $event): void
    {
        $this->emitter->emit($event);
    }

    /**
     * Adds an event listener
     *
     * @param string        $event
     * @param EventListener $listener
     * @param int           $priority
     */
    public function addListener(
        string $event,
        EventListener $listener,
        int $priority = EmitterInterface::P_NORMAL
    ): void {
        $this->emitter->addListener($event, $listener, $priority);
    }
}
